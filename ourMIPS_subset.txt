@exampleInstructions

Storing numbers in registers (I-type)
a. 001000 00000 00001 0000000000000010 | 0x20010002 - Store 2 at reg 1
b. 001000 00000 00010 0000000000000101 | 0x20020005 - Store 5 at reg 2
c. 001000 00000 00011 0000000000001010 | 0x2003000A - Store 10 at reg 3
d. 001000 00000 00100 0000000000001111 | 0x2004000F - Store 15 at reg 4

R-type
e. 000000 00001 00010 00101 00000 100000 | 0x00222820 - ADD reg1 to reg2 and store at reg5
f. 000000 00011 00010 00110 00000 100010 | 0x00623022 - SUB reg2 from reg3 and store at reg reg6
g. 000000 00011 00010 00111 00000 100111 | 0x00623827 - NOR reg3 with reg2 and store at reg7
h. 000000 00011 00010 01000 00000 100101 | 0x00624025 - OR reg3 with reg2 and store at reg8
i. 000000 00011 00010 01001 00000 100100 | 0x00624824 - AND reg3 with reg2 and store at reg9
j. 000000 00011 00010 01010 00000 100110 | 0x00625026 - XOR reg3 with reg2 and store at reg10
k. 000000 00011 00010 01010 00000 011000 | 0x00625018 - MUL reg3 by reg2 and store at reg10
l. 000000 00011 00010 01010 00000 011010 | 0x0062501A - DIV reg3 by reg2 and store at reg10

I-type
m. 101011 00000 00010 0000000000000001 | 0xAC020001 - Store reg2 to MEM[1]
n. 100011 00000 00011 0000000000000001 | 0x8C030001 - Load MEM[1] to reg3